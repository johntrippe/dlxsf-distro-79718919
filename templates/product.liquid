<div id="ajax-message" class="fade">
<div  class="header-cart-btn cart-toggle">Added to Cart!</div>  <a href="/cart" class="header-cart-btn cart-toggle">
            <span class="icon icon-cart"></span>
            {{ 'layout.cart.cart' | t }}</a>
</div>
<style>
		#ajax-message{
		display: none; 
		position: fixed; /* or absolute */
		left: 0px;
		z-index: 10;
		bottom:0px; 
		margin-top:5px;
		padding:10px 10px; 
		text-align: center; 
		width:100%;
		color:#424242;
		font-size:16px;
		font-family:sans-serif;
		background-color:yellow;
		
		};
		
		
</style>

<script type="text/javascript">
	$(window).scroll(function() {

    if ($(this).scrollTop()>0)
     {
        $('.fade').fadeOut();
     }
 });
</script>

{% include 'breadcrumb' %}




<div class="grid" itemscope itemtype="http://schema.org/Product">
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

	<div class="grid-item large--one-fifth">
		
		        <!-- START LEFT NAV -->
		    <style type="text/css">
			    
			    @media ( max-width: 1000px) {
			    #radical { display: none; }
			    }
			</style>
		    <div id="radical" style="padding: 10px; border-style: dashed; border-width: 1px; border-color: #717171;"> 
			    
			    {% include 'collection-sidebar' %}
			     
		        
				{% include 'related-products-test' %}
				
				</div> 
		    
		    	<!-- END LEFT NAV -->
	
	</div>
    	
    	
	<div class="grid-item large--two-fifths">
		<div class="grid">
		  <div class="grid-item large--eleven-twelfths text-center">
		    <!-- START MAGICZOOMPLUS IMAGES -->{% include 'magiczoomplus' %}<!-- END MAGICZOOMPLUS IMAGES -->
		
		  </div>
		</div>
	</div>
  
  		

  <div class="grid-item large--two-fifths" style="">

    <h2 itemprop="name">{{ product.title }}</h2>

    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">

      {% assign variant = product.selected_or_first_available_variant %}

      <meta itemprop="priceCurrency" content="{{ shop.currency }}">
      <meta itemprop="price" content="{{ variant.price | money }}">

      {% if settings.product_vendor_enable %}
        <p class="product-meta" itemprop="brand">{{ product.vendor }}</p>
      {% endif %}

      <ul class="inline-list product-meta">
        <li>
          <span id="productPrice" class="h1">
            {% include 'price' with variant.price %}
          </span>
        </li>
        {% if product.compare_at_price_max > product.price %}
        <li>
          <span id="comparePrice" class="sale-tag large">
            {% assign compare_price = variant.compare_at_price %}
            {% assign product_price = variant.price %}
            {% include 'price-sale' %}
          </span>
        </li>
        {% endif %}
        {% if settings.product_reviews_enable %}
          <li class="product-meta--review">
            <a href="#reviewz"><span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span></a>
          </li>
        {% endif %}
      </ul>
      
    {% for variant in product.variants %}
  {% if variant.inventory_quantity <= 0 and variant.title != "Default Title" and product.tags contains 'Atonce' %}
    <b>*</b>Size: {{ variant.title }} is on Back Order*<br>
  {% else %}
  {% endif %}
{% endfor %}

		{% if  product.type == "Trucks" %}<b>*Please note that trucks are sold as singles.</b><br>{% endif %}
  
      {% assign product_qty = 0 %}
{% for variant in product.variants %}
  {% if variant.inventory_quantity > 0 %}
    {% assign product_qty = product_qty | plus: variant.inventory_quantity %}
  {% endif %}
{% endfor %}

        {% assign out_of_stock = false %}
			{% for variant in product.variants %}
				{% if variant.inventory_quantity <= 0 %}
					{% assign out_of_stock = true %}
				{% endif %}
			{% endfor %}

		{% if out_of_stock == true and product.tags contains 'Atonce' %}
				<span class="badge-label">On Back Order</span>
		<div style="font-size: 10px;">[<a style="color:red;" href="#" class="BIS_trigger" data-product-handle="{{ product.handle }}">Get notified when in stock</a>]</div>
		{% endif %}
		


      <hr id="variantBreak" class="hr--clear hr--small">

      <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

      <form action="/cart/add" method="post" enctype="multipart/form-data" id="addToCartForm">
        <select name="id" id="productSelect" class="product-variants">
          {% for variant in product.variants %}
          

            {% if variant.available %}

              <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

            {% else %}
              <option disabled="disabled">
                {{ variant.title }} - {{ 'products.product.sold_out' | t }}
              </option>
            {% endif %}
          {% endfor %}
        </select>

        {% if settings.product_quantity_enable %}
          <label for="quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
          <input type="number" id="quantity" name="quantity" value="{% if product.type == "Trucks" %}2{% else %}1{% endif %}" min="1" class="quantity-selector">
        {% endif %}

        <button type="submit" name="add" id="addToCart" style="background: #FD0000;" class="btn">
          <span class="icon icon-cart"></span>
          <span id="addToCartText">{{ 'products.product.add_to_cart' | t }}</span>
        </button>

        <span id="variantQuantity" class="variant-quantity"></span>
        
        
      </form>

      <hr>

    </div>

    <div class="product-description rte" itemprop="description">
      {{ product.description }}
    </div>  
    

    {% if settings.social_sharing_products %}
      {% include 'social-sharing' %}
    {% endif %}
    
    	<div class="tags">
		          <i class="icon-tags">Tags: <br>
					{% for tag in product.tags %}
					<div style="float: left; background: #b4bcbf; margin-right: 2px; margin-bottom: 2px; padding-left: 6px; padding-right: 6px; color: #FFFFFF;"><a href="/collections/all/{{ tag | handleize }}" rel="tag"><font color="#FFFFFF">{{ tag }}</font></a></div>
					{% endfor %}
		          </i> </div>

  </div>
</div>



{% if settings.related_products_enable %}
  {% assign grid_item_width = 'large--one-fifth medium--one-third small--one-half' %}
  {% include 'related-products' %}
{% endif %}

{% if settings.product_reviews_enable %}
<a name="reviewz"></a>
  <hr>
  <div id="shopify-product-reviews" data-id="{{ product.id }}">{{ product.metafields.spr.reviews }}</div>
{% endif %}

<!-- START FEATURED -->

{% include 'featured' %} 

<!-- END FEATURED -->

{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>

  // Pre-loading product images, to avoid a lag when a thumbnail is clicked, or
  // when a variant is selected that has a variant image.
  Shopify.Image.preload({{ product.images | json }}, 'large');

  var selectCallback = function(variant, selector) {

    var $addToCart = $('#addToCart'),
        $productPrice = $('#productPrice'),
        $comparePrice = $('#comparePrice'),
        $variantQuantity = $('#variantQuantity'),
        $quantityElements = $('.quantity-selector, label + .js-qty'),
        $addToCartText = $('#addToCartText'),
        $featuredImage = $('#productPhotoImg');

    if (variant) {
      // Update variant image, if one is set
      // Call timber.switchImage function in shop.js
      if (variant.featured_image) {
        var newImg = variant.featured_image,
            el = $featuredImage[0];
        Shopify.Image.switchImage(newImg, el, timber.switchImage);
      }

      // Select a valid variant if available
      if (variant.available) {
        // We have a valid product variant, so enable the submit button
        $addToCart.removeClass('disabled').prop('disabled', false);
        $addToCartText.html({{ 'products.product.add_to_cart' | t | json }});

        // Show how many items are left, if below 10
        if (variant.inventory_management) {
          if (variant.inventory_quantity < 10 && variant.inventory_quantity > 0) {
            $variantQuantity.html({{ 'products.product.only_left' | t: count: '1' | json }}.replace('1', variant.inventory_quantity)).show();
          } else {
            $variantQuantity.hide();
          }
        }


        $quantityElements.show();
      } else {
        // Variant is sold out, disable the submit button
        $addToCart.addClass('disabled').prop('disabled', true);
        $addToCartText.html({{ 'products.product.sold_out' | t | json }});
        $variantQuantity.hide();
        $quantityElements.hide();
      }

      // Regardless of stock, update the product price
      var customPriceFormat = timber.formatMoney( Shopify.formatMoney(variant.price, "{{ shop.money_format }}") );
      $productPrice.html(customPriceFormat);

      // Also update and show the product's compare price if necessary
      if ( variant.compare_at_price > variant.price ) {
        var priceSaving = timber.formatSaleTag( Shopify.formatMoney(variant.compare_at_price - variant.price, "{{ shop.money_format }}") );
        {% comment %}
        priceSaving += ' (' + ( (variant.compare_at_price - variant.price)*100/(variant.compare_at_price) ).toFixed(0) + '%)';
        {% endcomment %}
        $comparePrice.html({{ 'products.general.save_html' | t: saved_amount: '[$]' | json }}.replace('[$]', priceSaving)).show();
      } else {
        $comparePrice.hide();
      }

    } else {
      // The variant doesn't exist, disable submit button.
      // This may be an error or notice that a specific variant is not available.
      $addToCart.addClass('disabled').prop('disabled', true);
      $addToCartText.html({{ 'products.product.unavailable' | t | json }});
      $variantQuantity.hide();
      $quantityElements.hide();
    }
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% else %}
      $('#variantBreak').removeClass('hr--clear');
    {% endif %}
  });
</script>

{% if settings.product_image_zoom_enable %}
  {{ 'jquery.zoom.min.js' | asset_url | script_tag }}
{% endif %}

<!-- START SCRIPT TO ADD TO CART -->

<script>
Shopify.itemsToAdd = [];
Shopify.addItemstoTheCart = function() {
  if (Shopify.itemsToAdd.length) {
    var item = Shopify.itemsToAdd.pop();
    $.ajax({
      url: '/cart/add',
      dataType: 'json',
      type: 'post',
      data: item,
      success: Shopify.addItemstoTheCart,
      error: Shopify.addItemstoTheCart
    });
  }
    else {
    window.location = window.location;
  }
};
jQuery(function($) {
  $('table .quantity:first').focus();
  $('[max]').change(function() {
    var max = parseInt($(this).attr('max'), 10);
    var value = parseInt($(this).val(), 10) || 0;
    if (value > max) { 
      alert('We only have ' + max + ' of this item in stock');
      $(this).val(max); 
    }    
  });
  $('.add-to-cart-order-form').click(function() {
    $('.add-to-cart-order-form').addClass('disabled').attr('disabled','disabled');
    // Resetting.
    Shopify.itemsToAdd = [];
    $('.quantity').each(function() {
      var quantity = parseInt($(this).val(), 10);
      if (quantity) {
        Shopify.itemsToAdd.push( { id: $(this).attr('data-id'), quantity: quantity } );
      }
    });     
    if (Shopify.itemsToAdd.length) {
      Shopify.addItemstoTheCart();
    }
    else {
      alert('All quantities are set to zero.');
      $('.add-to-cart-order-form').removeAttr('disabled').removeClass('disabled');
    }
  });
});
</script>

  
<style>
.action-bar { margin: 15px 0; }
.action-bar.top { margin: 30px 0 0; }
.action-bar h1 { margin:0; padding: 0; line-height:1 }
.left { float: left; }
.right { float: right; }
.clearfix:before, .clearfix:after { content: ""; display: table; }
.clearfix:after { clear: both; }
.clearfix { zoom: 1; }
/* Additional styles for table */
table.pure-table { margin: 15px 0; width: 100%; }
table.pure-table tr td:first-child, table.pure-table tr th:first-child { padding-left: 12px; }
table.pure-table tr td:last-child, table.pure-table tr th:last-child { padding-right: 12px; }
table.pure-table img { float:left; padding: 5px 0; }
table.pure-table td { vertical-align: middle; }
.quantity { text-align: center; width: 60px !important; margin: 0 !important; }
</style>

<!-- END SCRIPT TO ADD TO CART -->
